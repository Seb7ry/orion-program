# ===========================================
# ORION PROGRAM SERVICE - Configuration
# ===========================================

server:
  port: ${SERVER_PORT:8093}

spring:
  application:
    name: ${SERVICE_NAME:orion-program}

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  # MongoDB Configuration
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://localhost:27017/oriondb}

  # Docker Compose (disabled by default)
  docker:
    compose:
      enabled: false

# Eureka Configuration (disabled)
eureka:
  client:
    enabled: false
  instance:
    enabled: false

# External Services Configuration
orion:
  services:
    user-service-url: ${USER_SERVICE_URL:http://localhost:8092/service/user}
    connection-timeout: ${SERVICE_CONNECTION_TIMEOUT:5s}
    read-timeout: ${SERVICE_READ_TIMEOUT:10s}
    max-retries: ${SERVICE_MAX_RETRIES:3}
    retry-delay: ${SERVICE_RETRY_DELAY:500ms}
    failure-rate-threshold: ${SERVICE_FAILURE_RATE:50.0}
    minimum-number-of-calls: ${SERVICE_MIN_CALLS:5}
    wait-duration-in-open-state: ${SERVICE_CIRCUIT_WAIT:30s}

# Logging Configuration
logging:
  level:
    com.unibague.gradework: ${LOG_LEVEL:DEBUG}
    org.springframework.web: ${WEB_LOG_LEVEL:INFO}
    org.springframework.data.mongodb: ${MONGODB_LOG_LEVEL:INFO}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId}] %logger{36} - %msg%n"

# Management & Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env
      base-path: /actuator
  endpoint:
    health:
      show-details: always

# Application Info
info:
  app:
    name: ${spring.application.name}
    description: Program Management Service for Orion Platform
    version: 1.0.0
    contact: gradework@unibague.edu.co

---
# ===========================================
# DEVELOPMENT PROFILE
# ===========================================
spring:
  config:
    activate:
      on-profile: dev

# Development-specific MongoDB
orion:
  services:
    user-service-url: http://localhost:8092/service/user

logging:
  level:
    com.unibague.gradework: DEBUG

---
# ===========================================
# DOCKER PROFILE
# ===========================================
spring:
  config:
    activate:
      on-profile: docker

  data:
    mongodb:
      uri: mongodb://mongo:27017/oriondb

# Docker network service discovery
orion:
  services:
    user-service-url: http://orion-user:8092/service/user

logging:
  level:
    com.unibague.gradework: INFO

---
# ===========================================
# PRODUCTION PROFILE
# ===========================================
spring:
  config:
    activate:
      on-profile: prod

# Production MongoDB (externalized)
spring:
  data:
    mongodb:
      uri: ${MONGODB_PROD_URI}

# Production service URLs (externalized)
orion:
  services:
    user-service-url: ${USER_SERVICE_PROD_URL}
    connection-timeout: 3s
    read-timeout: 15s

logging:
  level:
    com.unibague.gradework: INFO
    root: WARN